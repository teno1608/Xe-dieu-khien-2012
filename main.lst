CCS PCM C Compiler, Version 5.015, 24702               13-Jul-22 22:42

               Filename:   D:\tai lieu tong hop\xedua2\main.lst

               ROM used:   232 words (3%)
                           Largest free fragment is 2048
               RAM used:   9 (2%) at main() level
                           11 (3%) worst case
               Stack used: 2 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   0C3
0003:  NOP
.................... #include <16f887.h> 
.................... //////////// Standard Header file for the PIC16F887 device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2013 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F887 
....................  
.................... #list 
....................  
.................... #fuses nowdt,hs,noput,noprotect,nodebug,nobrownout,nolvp,nocpd,nowrt 
.................... #use delay(clock=20000000) 
*
0027:  MOVLW  24
0028:  MOVWF  04
0029:  BCF    03.7
002A:  MOVF   00,W
002B:  BTFSC  03.2
002C:  GOTO   03A
002D:  MOVLW  06
002E:  MOVWF  78
002F:  CLRF   77
0030:  DECFSZ 77,F
0031:  GOTO   030
0032:  DECFSZ 78,F
0033:  GOTO   02F
0034:  MOVLW  7B
0035:  MOVWF  77
0036:  DECFSZ 77,F
0037:  GOTO   036
0038:  DECFSZ 00,F
0039:  GOTO   02D
003A:  RETURN
....................     
.................... #bit toi=0x06.4 
.................... #bit lui=0x06.5 
.................... #bit tr=0x06.3 
.................... #bit ph=0x6.2 
.................... #bit nn=0x6.0 
.................... #bit nc=0x6.1 
.................... INT8 trai,phai; 
.................... int1 i; 
.................... void setbamxung() 
.................... { 
....................    setup_timer_2 (t2_div_by_4, 124, 1) ; 
*
0004:  MOVLW  00
0005:  MOVWF  78
0006:  IORLW  05
0007:  MOVWF  12
0008:  MOVLW  7C
0009:  BSF    03.5
000A:  MOVWF  12
....................    setup_ccp1 (ccp_pwm); 
000B:  BCF    03.5
000C:  BCF    23.2
000D:  MOVF   23,W
000E:  BSF    03.5
000F:  MOVWF  07
0010:  BCF    03.5
0011:  BCF    07.2
0012:  MOVLW  0C
0013:  MOVWF  17
0014:  BSF    03.5
0015:  CLRF   1B
0016:  CLRF   1C
0017:  MOVLW  01
0018:  MOVWF  1D
....................    setup_ccp2 (ccp_pwm); 
0019:  BCF    03.5
001A:  BCF    23.1
001B:  MOVF   23,W
001C:  BSF    03.5
001D:  MOVWF  07
001E:  BCF    03.5
001F:  BCF    07.1
0020:  MOVLW  0C
0021:  MOVWF  1D
....................    set_pwm2_duty (0); 
0022:  CLRF   1B
....................    set_pwm1_duty (0); 
0023:  CLRF   15
0024:  BCF    0A.3
0025:  BCF    0A.4
0026:  GOTO   0DA (RETURN)
.................... } 
....................  
.................... void setdc(INT8 trai,phai) 
.................... { 
....................    output_low (pin_c0); 
*
003B:  BCF    23.0
003C:  MOVF   23,W
003D:  BSF    03.5
003E:  MOVWF  07
003F:  BCF    03.5
0040:  BCF    07.0
....................    output_low (pin_c3); 
0041:  BCF    23.3
0042:  MOVF   23,W
0043:  BSF    03.5
0044:  MOVWF  07
0045:  BCF    03.5
0046:  BCF    07.3
....................    set_pwm2_duty (trai); 
0047:  MOVF   24,W
0048:  MOVWF  1B
....................    set_pwm1_duty (phai); 
0049:  MOVF   25,W
004A:  MOVWF  15
004B:  RETURN
.................... } 
....................  
.................... ///////////////////////////////////////////////////////////// 
.................... void setdcng(INT8 trai,phai) 
.................... { 
....................    output_high (pin_c0); 
004C:  BCF    23.0
004D:  MOVF   23,W
004E:  BSF    03.5
004F:  MOVWF  07
0050:  BCF    03.5
0051:  BSF    07.0
....................    output_high (pin_c3); 
0052:  BCF    23.3
0053:  MOVF   23,W
0054:  BSF    03.5
0055:  MOVWF  07
0056:  BCF    03.5
0057:  BSF    07.3
....................    set_pwm2_duty (trai); 
0058:  MOVF   24,W
0059:  MOVWF  1B
....................    set_pwm1_duty (phai); 
005A:  MOVF   25,W
005B:  MOVWF  15
005C:  RETURN
.................... } 
....................  
....................  
.................... void chaynhanh() 
.................... { 
.................... while(i==0) 
*
0090:  BTFSC  22.0
0091:  GOTO   0C0
.................... { 
....................       while(nc==0) 
0092:  BTFSC  06.1
0093:  GOTO   096
....................       { 
....................       i=1; 
0094:  BSF    22.0
0095:  GOTO   092
....................       } 
....................        setdc(0,0); 
0096:  CLRF   24
0097:  CLRF   25
0098:  CALL   03B
....................        ///////////////toi///////////////////////// 
....................        WHILE (toi == 0) 
0099:  BTFSC  06.4
009A:  GOTO   0A0
....................        { 
....................           setdc (100, 100) ; 
009B:  MOVLW  64
009C:  MOVWF  24
009D:  MOVWF  25
009E:  CALL   03B
009F:  GOTO   099
....................        } 
....................  
....................        ///////////////////////lui/////////////////// 
....................        WHILE (lui == 0) 
00A0:  BTFSC  06.5
00A1:  GOTO   0A7
....................        { 
....................           setdcng (100, 100) ; 
00A2:  MOVLW  64
00A3:  MOVWF  24
00A4:  MOVWF  25
00A5:  CALL   04C
00A6:  GOTO   0A0
....................        } 
....................  
....................        ///////////////trai/////////////////// 
....................        WHILE (tr == 0) 
00A7:  BTFSC  06.3
00A8:  GOTO   0B3
....................        { 
....................           output_high (pin_c0) ; 
00A9:  BCF    23.0
00AA:  MOVF   23,W
00AB:  BSF    03.5
00AC:  MOVWF  07
00AD:  BCF    03.5
00AE:  BSF    07.0
....................           set_pwm2_duty (50); 
00AF:  MOVLW  32
00B0:  MOVWF  1B
....................           set_pwm1_duty (50); 
00B1:  MOVWF  15
00B2:  GOTO   0A7
....................        } 
....................  
....................        /////////////////////phai///////////////////////// 
....................        WHILE (ph == 0) 
00B3:  BTFSC  06.2
00B4:  GOTO   0BF
....................        { 
....................           output_high (pin_c3) ; 
00B5:  BCF    23.3
00B6:  MOVF   23,W
00B7:  BSF    03.5
00B8:  MOVWF  07
00B9:  BCF    03.5
00BA:  BSF    07.3
....................           set_pwm2_duty (50); 
00BB:  MOVLW  32
00BC:  MOVWF  1B
....................           set_pwm1_duty (50); 
00BD:  MOVWF  15
00BE:  GOTO   0B3
....................        } 
00BF:  GOTO   090
....................     } 
00C0:  BCF    0A.3
00C1:  BCF    0A.4
00C2:  GOTO   0E3 (RETURN)
.................... } 
.................... void chaycham() 
.................... { 
.................... while(i==1) 
*
005D:  BTFSS  22.0
005E:  GOTO   08D
.................... {         
....................       while(nn==0) 
005F:  BTFSC  06.0
0060:  GOTO   063
....................       { 
....................       i=0; 
0061:  BCF    22.0
0062:  GOTO   05F
....................       } 
....................        setdc(0,0); 
0063:  CLRF   24
0064:  CLRF   25
0065:  CALL   03B
....................        ///////////////toi///////////////////////// 
....................        WHILE (toi == 0) 
0066:  BTFSC  06.4
0067:  GOTO   06D
....................        { 
....................           setdc (30, 30) ; 
0068:  MOVLW  1E
0069:  MOVWF  24
006A:  MOVWF  25
006B:  CALL   03B
006C:  GOTO   066
....................        } 
....................  
....................        ///////////////////////lui/////////////////// 
....................        WHILE (lui == 0) 
006D:  BTFSC  06.5
006E:  GOTO   074
....................        { 
....................           setdcng (30, 30) ; 
006F:  MOVLW  1E
0070:  MOVWF  24
0071:  MOVWF  25
0072:  CALL   04C
0073:  GOTO   06D
....................        } 
....................  
....................        ///////////////trai/////////////////// 
....................        WHILE (tr == 0) 
0074:  BTFSC  06.3
0075:  GOTO   080
....................        { 
....................           output_high (pin_c0) ; 
0076:  BCF    23.0
0077:  MOVF   23,W
0078:  BSF    03.5
0079:  MOVWF  07
007A:  BCF    03.5
007B:  BSF    07.0
....................           set_pwm2_duty (50); 
007C:  MOVLW  32
007D:  MOVWF  1B
....................           set_pwm1_duty (50); 
007E:  MOVWF  15
007F:  GOTO   074
....................        } 
....................  
....................        /////////////////////phai///////////////////////// 
....................        WHILE (ph == 0) 
0080:  BTFSC  06.2
0081:  GOTO   08C
....................        { 
....................           output_high (pin_c3) ; 
0082:  BCF    23.3
0083:  MOVF   23,W
0084:  BSF    03.5
0085:  MOVWF  07
0086:  BCF    03.5
0087:  BSF    07.3
....................           set_pwm2_duty (50); 
0088:  MOVLW  32
0089:  MOVWF  1B
....................           set_pwm1_duty (50); 
008A:  MOVWF  15
008B:  GOTO   080
....................        } 
008C:  GOTO   05D
....................     } 
008D:  BCF    0A.3
008E:  BCF    0A.4
008F:  GOTO   0DF (RETURN)
.................... }    
....................  
.................... ////////////////////////////// 
....................  VOID main () 
*
00C3:  MOVF   03,W
00C4:  ANDLW  1F
00C5:  MOVWF  03
00C6:  MOVLW  FF
00C7:  MOVWF  23
00C8:  BSF    03.5
00C9:  BSF    03.6
00CA:  MOVF   09,W
00CB:  ANDLW  C0
00CC:  MOVWF  09
00CD:  BCF    03.6
00CE:  BCF    1F.4
00CF:  BCF    1F.5
00D0:  MOVLW  00
00D1:  BSF    03.6
00D2:  MOVWF  08
00D3:  BCF    03.5
00D4:  CLRF   07
00D5:  CLRF   08
00D6:  CLRF   09
00D7:  BCF    03.7
....................  { 
....................     setbamxung (); 
00D8:  BCF    03.6
00D9:  GOTO   004
....................    while(true) 
....................    { 
....................     i=1; 
00DA:  BSF    22.0
....................     delay_ms(200); 
00DB:  MOVLW  C8
00DC:  MOVWF  24
00DD:  CALL   027
....................      chaycham(); 
00DE:  GOTO   05D
....................      delay_ms(200); 
00DF:  MOVLW  C8
00E0:  MOVWF  24
00E1:  CALL   027
....................      chaynhanh(); 
00E2:  GOTO   090
....................     delay_ms(200); 
00E3:  MOVLW  C8
00E4:  MOVWF  24
00E5:  CALL   027
00E6:  GOTO   0DA
....................  } 
....................  } 
....................  
00E7:  SLEEP

Configuration Fuses:
   Word  1: 2CF2   HS NOWDT NOPUT MCLR NOPROTECT NOCPD NOBROWNOUT IESO FCMEN NOLVP NODEBUG
   Word  2: 3FFF   BORV40 NOWRT
